{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMrpXtNVjR3XugOZ9qro9KZ",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Oscar52analitica/Esenttia/blob/main/eda\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "QGvbeLRK6KpV"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# Cargar los datos desde Excel.\n",
        "df_mexico = pd.read_excel('BDD_MÉXICO.xlsx', sheet_name='Data_Original_México')\n",
        "df_esenttia = pd.read_excel('BDD_MÉXICO.xlsx', sheet_name='Clientes_Esenttia')"
      ],
      "metadata": {
        "id": "kRorb-CGxB9S"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_mexico.head()"
      ],
      "metadata": {
        "id": "8v-l04oUxHiA"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# EDA"
      ],
      "metadata": {
        "id": "j1lL0z_V36TZ"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df_mexico.shape"
      ],
      "metadata": {
        "id": "NavE_TIV4IgA"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Control duplicados\n",
        "df_mexico.duplicated().sum()"
      ],
      "metadata": {
        "id": "KY4HV9L84x4c"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# Information\n",
        "df_mexico.info()"
      ],
      "metadata": {
        "id": "buTi4Taf5AoZ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# Datos numéricos"
      ],
      "metadata": {
        "id": "6FkFhIHG5PPk"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "df_mexico.describe()"
      ],
      "metadata": {
        "id": "R7x0AxV15WOo"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Codigo para analisis de volumen"
      ],
      "metadata": {
        "id": "OZzOxldYyfv_"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Calcular el Volumen México (Ton) en la primera hoja\n",
        "df_mexico['Volumen_Mexico_Ton'] = df_mexico['Volúmen'] / 1000\n",
        "\n",
        "# Filtrar los datos de la columna 'Perfil'\n",
        "df_mexico_filtrado = df_mexico[df_mexico['Perfil'].isin(['Transformador', 'Transformadores'])].copy()\n",
        "\n",
        "# Crear rangos para el Volumen México (Ton)\n",
        "bins = [0, 5, 20, 50, float('inf')]\n",
        "labels = ['0 - 5', '5 - 20', '20 - 50', '>50']\n",
        "df_mexico_filtrado['Rango'] = pd.cut(df_mexico_filtrado['Volumen_Mexico_Ton'], bins=bins, labels=labels, right=False)\n",
        "\n",
        "# Calcular el volumen total y la frecuencia por rango\n",
        "volumen_por_rango_mexico = df_mexico_filtrado.groupby('Rango')['Volumen_Mexico_Ton'].sum()\n",
        "conteo_rangos_mexico = df_mexico_filtrado['Rango'].value_counts().sort_index()\n",
        "conteo_rangos_esenttia = df_esenttia['Rango'].value_counts().sort_index()\n",
        "\n",
        "# Gráfico de Volumen Total y Frecuencia por Intervalos\n",
        "plt.figure(figsize=(12, 8))\n",
        "\n",
        "# Gráfica de barras para el volumen total en cada rango\n",
        "ax1 = sns.barplot(x=volumen_por_rango_mexico.values, y=volumen_por_rango_mexico.index, palette='viridis', orient='h')\n",
        "for i, value in enumerate(volumen_por_rango_mexico.values):\n",
        "    ax1.text(value / 2, i, f'{value:.1f}', ha='center', va='center', fontweight='bold', color='white')\n",
        "\n",
        "# Agregar las líneas de frecuencia para ambas hojas\n",
        "plt.plot(conteo_rangos_mexico.values, conteo_rangos_mexico.index, color='blue', marker='o', linestyle='-', label='Frecuencia México')\n",
        "plt.plot(conteo_rangos_esenttia.values, conteo_rangos_esenttia.index, color='orange', marker='o', linestyle='-', label='Frecuencia Clientes Esenttia')\n",
        "\n",
        "# Configuración del gráfico\n",
        "plt.title('Volumen Total y Frecuencia de Productos por Intervalos')\n",
        "plt.xlabel('Volumen Total (Ton)')\n",
        "plt.ylabel('Intervalos de Volumen (Ton)')\n",
        "plt.legend()\n",
        "\n",
        "# Mostrar el gráfico\n",
        "plt.show()"
      ],
      "metadata": {
        "id": "kFrwW-Tww9S-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Codigo para analisis de Precio"
      ],
      "metadata": {
        "id": "WmIOHH5-3glA"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Calcular el Volumen México (Ton) en la primera hoja\n",
        "df_mexico['Volumen_Mexico_Ton'] = df_mexico['Volúmen'] / 1000\n",
        "\n",
        "# Filtrar los datos de la columna 'Perfil'\n",
        "df_mexico_filtrado = df_mexico[df_mexico['Perfil'].isin(['Transformador', 'Transformadores'])].copy()\n",
        "\n",
        "# Calcular el Precio México (USD/Ton)\n",
        "df_mexico_filtrado['Precio_Mexico_USD_Ton'] = df_mexico_filtrado['U$S CIF'] / df_mexico_filtrado['Volumen_Mexico_Ton']\n",
        "\n",
        "# Gráfico de Frecuencia para el Precio México (USD/Ton)\n",
        "plt.figure(figsize=(10, 6))\n",
        "sns.histplot(df_mexico_filtrado['Precio_Mexico_USD_Ton'], bins=20, color='skyblue')\n",
        "plt.title('Distribución de Frecuencia de Precios México (USD/Ton)')\n",
        "plt.xlabel('Precio México (USD/Ton)')\n",
        "plt.ylabel('Frecuencia')\n",
        "\n",
        "# Definir rangos para el Precio México (USD/Ton)\n",
        "price_bins = [0, 500, 1000, 1500, 2000, float('inf')]\n",
        "price_labels = ['0 - 500', '500 - 1000', '1000 - 1500', '1500 - 2000', '>2000']\n",
        "df_mexico_filtrado['Rango_Precio'] = pd.cut(df_mexico_filtrado['Precio_Mexico_USD_Ton'], bins=price_bins, labels=price_labels, right=False)\n",
        "\n",
        "# Calcular la suma de precios en cada rango\n",
        "precio_por_rango = df_mexico_filtrado.groupby('Rango_Precio')['Precio_Mexico_USD_Ton'].sum()\n",
        "\n",
        "# Crear el histograma basado en rangos de precios\n",
        "plt.figure(figsize=(10, 6))\n",
        "sns.barplot(x=precio_por_rango.index, y=precio_por_rango.values, palette='coolwarm')\n",
        "\n",
        "# Configurar título y etiquetas\n",
        "plt.title('Suma de Precios por Intervalos (USD/Ton)')\n",
        "plt.xlabel('Intervalos de Precio (USD/Ton)')\n",
        "plt.ylabel('Suma de Precios (USD)')\n",
        "\n",
        "# Mostrar el gráfico\n",
        "plt.show()\n"
      ],
      "metadata": {
        "id": "kRIGXpSe3pMh"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}